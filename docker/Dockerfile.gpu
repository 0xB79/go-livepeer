# build stage
FROM nvidia/cuda:10.1-devel-ubuntu18.04 as builder
ENV DEBIAN_FRONTEND noninteractive
RUN export DEBIAN_FRONTEND=noninteractive
RUN apt-get update && apt-get dist-upgrade -y && \
    apt-get install software-properties-common -y && \
    add-apt-repository ppa:longsleep/golang-backports && \
    apt-get update && apt-get dist-upgrade -y && \
    apt-get install -y build-essential pkg-config autoconf gnutls-dev \
    git curl golang-go && \
    apt-get update && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

RUN git clone -b nasm-2.14.02 https://repo.or.cz/nasm.git "$HOME/nasm" && \
    cd "$HOME/nasm" && \
    ./autogen.sh && \
    ./configure && \
    make && \
    make install || echo "Installing docs fails but should be OK otherwise"

RUN git clone http://git.videolan.org/git/x264.git "$HOME/x264" && \
    cd "$HOME/x264" && \
    git checkout 545de2ffec6ae9a80738de1b2c8cf820249a2530 && \
    ./configure --enable-pic --enable-static --disable-cli && \
    make && \
    make install-lib-static

RUN git clone https://git.ffmpeg.org/ffmpeg.git "$HOME/ffmpeg"

RUN git clone --single-branch https://github.com/FFmpeg/nv-codec-headers && \
    cd nv-codec-headers && \
    make install && \
    cd .. && \
    rm -rf nv-codec-headers

RUN export PATH=/usr/local/cuda/bin:$PATH && \
    cd "$HOME/ffmpeg" && \
    git checkout 4cfc34d9a8bffe4a1dd53187a3e0f25f34023a09 && \
    ./configure --disable-static --enable-shared \
        --enable-gpl --enable-nonfree --enable-libx264 --enable-cuda --enable-cuvid \
        --enable-nvenc --enable-cuda-nvcc --enable-libnpp --enable-gnutls \
        --extra-ldflags=-L/usr/local/cuda/lib64 \
        --extra-cflags='-pg -I/usr/local/cuda/include' --disable-stripping

RUN export PATH=$HOME/compiled/bin:$PATH && \
    export PATH=/usr/local/cuda/bin:$PATH && \
    export PKG_CONFIG_PATH=$HOME/compiled/lib/pkgconfig && \
    cd "$HOME/ffmpeg" && \
    make && make install

RUN export PATH=$HOME/compiled/bin:$PATH && \
    export PATH=/usr/local/cuda/bin:$PATH && \
    export PKG_CONFIG_PATH=$HOME/compiled/lib/pkgconfig && \
    git clone https://github.com/livepeer/go-livepeer "/root/go-livepeer" && \
    cd "/root/go-livepeer" && \
    go mod download && \
    go build ./cmd/livepeer/livepeer.go && \
    go build ./cmd/devtool/devtool.go

ENV LD_LIBRARY_PATH /usr/local/lib/

# final stage
FROM nvidia/cuda:10.1-devel-ubuntu18.04
ENV DEBIAN_FRONTEND noninteractive
RUN export DEBIAN_FRONTEND=noninteractive
RUN apt-get update && apt-get dist-upgrade -y && \
    apt-get install software-properties-common -y && \
    add-apt-repository ppa:longsleep/golang-backports && \
    apt-get update && apt-get dist-upgrade -y && \
    apt-get install -y build-essential pkg-config autoconf gnutls-dev \
    git curl golang-go && \
    apt-get update && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

RUN add-apt-repository universe && apt-get update &&  apt-get install -y jq

RUN curl -O http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/cuda-repo-ubuntu1604_10.1.168-1_amd64.deb && \
    dpkg --force-confdef --force-confnew -i ./cuda-repo-ubuntu1604_10.1.168-1_amd64.deb && \
    apt-key adv --fetch-keys http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/7fa2af80.pub && \ 
    curl -O http://ftp.ubuntu.com/ubuntu/ubuntu/pool/restricted/n/nvidia-graphics-drivers-418/libnvidia-compute-418_418.56-0ubuntu1_amd64.deb && \
    dpkg --force-confdef --force-confnew -i ./libnvidia-compute-418_418.56-0ubuntu1_amd64.deb && \
    curl -O http://ftp.ubuntu.com/ubuntu/ubuntu/pool/restricted/n/nvidia-graphics-drivers-418/libnvidia-decode-418_418.56-0ubuntu1_amd64.deb && \
    dpkg --force-confdef --force-confnew -i ./libnvidia-decode-418_418.56-0ubuntu1_amd64.deb && \
    curl -O http://ftp.ubuntu.com/ubuntu/ubuntu/pool/restricted/n/nvidia-graphics-drivers-418/libnvidia-encode-418_418.56-0ubuntu1_amd64.deb && \
    dpkg --force-confdef --force-confnew -i ./libnvidia-encode-418_418.56-0ubuntu1_amd64.deb

COPY --from=builder /usr/local/lib/* /usr/local/lib/
COPY --from=builder /root/go-livepeer/devtool /usr/local/bin/
COPY --from=builder /root/go-livepeer/livepeer /usr/local/bin/

RUN ln -s /usr/local/bin/livepeer /
RUN ln -s /usr/local/bin/livepeer /usr/bin/
ENV LD_LIBRARY_PATH /usr/local/lib/

# Keylase patch
ENV NVIDIA_VISIBLE_DEVICES all
ENV NVIDIA_DRIVER_CAPABILITIES compute,video,utility

RUN mkdir -p /usr/local/bin /patched-lib
COPY docker/patch.sh docker/gpu-start.sh /usr/local/bin/
RUN chmod +x /usr/local/bin/patch.sh /usr/local/bin/gpu-start.sh

WORKDIR /root
RUN mkdir -p /root/.lpData/mainnet/keystore && \
  mkdir -p /root/.lpData/rinkeby/keystore && \
  mkdir -p /root/.lpData/devenv/keystore && mkdir -p /root/.lpData/offchain/keystore

EXPOSE 7935/tcp
EXPOSE 8935/tcp
EXPOSE 1935/tcp

ENTRYPOINT ["/usr/local/bin/gpu-start.sh"]
CMD ["--help"]

