# This is the one with Docker
image: Windows Server 2019

environment:
  DOCKER_CLI_EXPERIMENTAL: enabled

test_script:
  - docker login -u %DOCKER_USER% -p %DOCKER_PASS%

  # First, build/cache the platform-specific root container
  - ps: $ErrorActionPreference = 'SilentlyContinue' ; docker pull livepeerci/build-platform:latest-windows
  - docker build -m 4gb --cache-from=livepeerci/build-platform:latest-windows -t livepeerci/build-platform:latest -f .\docker\Dockerfile.build-windows .
  - docker push livepeerci/build-platform:latest-windows
  - docker manifest create livepeerci/build-platform:latest livepeerci/build-platform:latest-linux livepeerci/build-platform:latest-windows
  - docker manifest push livepeerci/build-platform:latest

  # Then, build/cache the container shared between Windows and Linux
  # - ps: $ErrorActionPreference = 'SilentlyContinue' ; docker pull livepeerci/build:latest-windows
  - docker build -m 4gb --cache-from=livepeerci/build:latest-windows -t livepeerci/build:latest -f .\docker\Dockerfile.build .
  - docker push livepeerci/build:latest-windows
  - docker manifest create livepeerci/build:latest livepeerci/build:latest-linux livepeerci/build:latest-windows
  - docker manifest push livepeerci/build:latest

  # Push the release image at the tag name with non-alphanums removed
  - ps: |-
      $TAG = $env:APPVEYOR_REPO_BRANCH -replace '[\W]', '' ;
      docker build -t "livepeer/go-livepeer:$TAG-windows" -f docker/Dockerfile.release-windows . ;
      docker push "livepeer/go-livepeer:$TAG-windows"
      # Manifest step is optional in case the Linux build hasn't completed yet
      $ErrorActionPreference = 'SilentlyContinue'
      docker manifest create "livepeer/go-livepeer:$TAG" "livepeer/go-livepeer:$TAG-linux" "livepeer/go-livepeer:$TAG-windows"
      docker manifest push "livepeer/go-livepeer:$TAG"

# Don't actually build.
build: off
