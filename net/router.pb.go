// Code generated by protoc-gen-go. DO NOT EDIT.
// source: net/router.proto

package net

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BroadcasterLatencyReq struct {
	Uri                  string   `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BroadcasterLatencyReq) Reset()         { *m = BroadcasterLatencyReq{} }
func (m *BroadcasterLatencyReq) String() string { return proto.CompactTextString(m) }
func (*BroadcasterLatencyReq) ProtoMessage()    {}
func (*BroadcasterLatencyReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_94b28f5872f7995e, []int{0}
}

func (m *BroadcasterLatencyReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BroadcasterLatencyReq.Unmarshal(m, b)
}
func (m *BroadcasterLatencyReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BroadcasterLatencyReq.Marshal(b, m, deterministic)
}
func (m *BroadcasterLatencyReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BroadcasterLatencyReq.Merge(m, src)
}
func (m *BroadcasterLatencyReq) XXX_Size() int {
	return xxx_messageInfo_BroadcasterLatencyReq.Size(m)
}
func (m *BroadcasterLatencyReq) XXX_DiscardUnknown() {
	xxx_messageInfo_BroadcasterLatencyReq.DiscardUnknown(m)
}

var xxx_messageInfo_BroadcasterLatencyReq proto.InternalMessageInfo

func (m *BroadcasterLatencyReq) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

type LatencyCheckRes struct {
	RespTime             int64    `protobuf:"varint,1,opt,name=respTime,proto3" json:"respTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LatencyCheckRes) Reset()         { *m = LatencyCheckRes{} }
func (m *LatencyCheckRes) String() string { return proto.CompactTextString(m) }
func (*LatencyCheckRes) ProtoMessage()    {}
func (*LatencyCheckRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_94b28f5872f7995e, []int{1}
}

func (m *LatencyCheckRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LatencyCheckRes.Unmarshal(m, b)
}
func (m *LatencyCheckRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LatencyCheckRes.Marshal(b, m, deterministic)
}
func (m *LatencyCheckRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LatencyCheckRes.Merge(m, src)
}
func (m *LatencyCheckRes) XXX_Size() int {
	return xxx_messageInfo_LatencyCheckRes.Size(m)
}
func (m *LatencyCheckRes) XXX_DiscardUnknown() {
	xxx_messageInfo_LatencyCheckRes.DiscardUnknown(m)
}

var xxx_messageInfo_LatencyCheckRes proto.InternalMessageInfo

func (m *LatencyCheckRes) GetRespTime() int64 {
	if m != nil {
		return m.RespTime
	}
	return 0
}

type ClosestOrchestratorReq struct {
	BroadcasterUri       string   `protobuf:"bytes,1,opt,name=broadcasterUri,proto3" json:"broadcasterUri,omitempty"`
	OrchestratorUri      string   `protobuf:"bytes,2,opt,name=orchestratorUri,proto3" json:"orchestratorUri,omitempty"`
	RespTime             int64    `protobuf:"varint,3,opt,name=respTime,proto3" json:"respTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClosestOrchestratorReq) Reset()         { *m = ClosestOrchestratorReq{} }
func (m *ClosestOrchestratorReq) String() string { return proto.CompactTextString(m) }
func (*ClosestOrchestratorReq) ProtoMessage()    {}
func (*ClosestOrchestratorReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_94b28f5872f7995e, []int{2}
}

func (m *ClosestOrchestratorReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClosestOrchestratorReq.Unmarshal(m, b)
}
func (m *ClosestOrchestratorReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClosestOrchestratorReq.Marshal(b, m, deterministic)
}
func (m *ClosestOrchestratorReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClosestOrchestratorReq.Merge(m, src)
}
func (m *ClosestOrchestratorReq) XXX_Size() int {
	return xxx_messageInfo_ClosestOrchestratorReq.Size(m)
}
func (m *ClosestOrchestratorReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ClosestOrchestratorReq.DiscardUnknown(m)
}

var xxx_messageInfo_ClosestOrchestratorReq proto.InternalMessageInfo

func (m *ClosestOrchestratorReq) GetBroadcasterUri() string {
	if m != nil {
		return m.BroadcasterUri
	}
	return ""
}

func (m *ClosestOrchestratorReq) GetOrchestratorUri() string {
	if m != nil {
		return m.OrchestratorUri
	}
	return ""
}

func (m *ClosestOrchestratorReq) GetRespTime() int64 {
	if m != nil {
		return m.RespTime
	}
	return 0
}

type ClosestOrchestratorRes struct {
	Updated              bool     `protobuf:"varint,1,opt,name=updated,proto3" json:"updated,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClosestOrchestratorRes) Reset()         { *m = ClosestOrchestratorRes{} }
func (m *ClosestOrchestratorRes) String() string { return proto.CompactTextString(m) }
func (*ClosestOrchestratorRes) ProtoMessage()    {}
func (*ClosestOrchestratorRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_94b28f5872f7995e, []int{3}
}

func (m *ClosestOrchestratorRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClosestOrchestratorRes.Unmarshal(m, b)
}
func (m *ClosestOrchestratorRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClosestOrchestratorRes.Marshal(b, m, deterministic)
}
func (m *ClosestOrchestratorRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClosestOrchestratorRes.Merge(m, src)
}
func (m *ClosestOrchestratorRes) XXX_Size() int {
	return xxx_messageInfo_ClosestOrchestratorRes.Size(m)
}
func (m *ClosestOrchestratorRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ClosestOrchestratorRes.DiscardUnknown(m)
}

var xxx_messageInfo_ClosestOrchestratorRes proto.InternalMessageInfo

func (m *ClosestOrchestratorRes) GetUpdated() bool {
	if m != nil {
		return m.Updated
	}
	return false
}

func init() {
	proto.RegisterType((*BroadcasterLatencyReq)(nil), "net.BroadcasterLatencyReq")
	proto.RegisterType((*LatencyCheckRes)(nil), "net.LatencyCheckRes")
	proto.RegisterType((*ClosestOrchestratorReq)(nil), "net.ClosestOrchestratorReq")
	proto.RegisterType((*ClosestOrchestratorRes)(nil), "net.ClosestOrchestratorRes")
}

func init() {
	proto.RegisterFile("net/router.proto", fileDescriptor_94b28f5872f7995e)
}

var fileDescriptor_94b28f5872f7995e = []byte{
	// 257 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x51, 0xc1, 0x4a, 0xc3, 0x40,
	0x10, 0x6d, 0x0c, 0x68, 0x1d, 0x8a, 0x2d, 0x83, 0x4a, 0x89, 0x17, 0xd9, 0x83, 0xd4, 0x83, 0x11,
	0xea, 0x0f, 0x88, 0x3d, 0x08, 0x22, 0x08, 0x8b, 0xfd, 0x80, 0x6d, 0x32, 0xd0, 0xa2, 0x66, 0xe3,
	0xec, 0xe4, 0xe0, 0x0f, 0xf8, 0x15, 0x7e, 0xac, 0x64, 0xa8, 0xb5, 0x2e, 0xb1, 0xb7, 0x9d, 0xf7,
	0xde, 0xce, 0xbc, 0x79, 0x03, 0xa3, 0x8a, 0xe4, 0x9a, 0x7d, 0x23, 0xc4, 0x79, 0xcd, 0x5e, 0x3c,
	0xa6, 0x15, 0x89, 0xb9, 0x84, 0x93, 0x3b, 0xf6, 0xae, 0x2c, 0x5c, 0x10, 0xe2, 0x47, 0x27, 0x54,
	0x15, 0x1f, 0x96, 0xde, 0x71, 0x04, 0x69, 0xc3, 0xab, 0x71, 0x72, 0x9e, 0x4c, 0x0e, 0x6d, 0xfb,
	0x34, 0x57, 0x30, 0x5c, 0xf3, 0xb3, 0x25, 0x15, 0x2f, 0x96, 0x02, 0x66, 0xd0, 0x67, 0x0a, 0xf5,
	0xf3, 0xea, 0x8d, 0x54, 0x99, 0xda, 0x4d, 0x6d, 0x3e, 0x13, 0x38, 0x9d, 0xbd, 0xfa, 0x40, 0x41,
	0x9e, 0xb8, 0x58, 0x52, 0x10, 0x76, 0xe2, 0xb9, 0xed, 0x7d, 0x01, 0x47, 0x8b, 0xdf, 0xa1, 0xf3,
	0xcd, 0x98, 0x08, 0xc5, 0x09, 0x0c, 0xfd, 0xd6, 0xd7, 0x56, 0xb8, 0xa7, 0xc2, 0x18, 0xfe, 0x63,
	0x24, 0x8d, 0x8c, 0x4c, 0xff, 0xf1, 0x11, 0x70, 0x0c, 0x07, 0x4d, 0x5d, 0x3a, 0xa1, 0x52, 0x0d,
	0xf4, 0xed, 0x4f, 0x39, 0xfd, 0x4a, 0x60, 0xb0, 0xbd, 0x2c, 0xde, 0x02, 0xdc, 0x93, 0xac, 0x21,
	0xcc, 0xf2, 0x8a, 0x24, 0xef, 0x0c, 0x2e, 0x3b, 0x56, 0x2e, 0x4a, 0xca, 0xf4, 0xf0, 0x01, 0x06,
	0x73, 0xed, 0x6e, 0xf5, 0x08, 0x78, 0xa6, 0xba, 0xee, 0x84, 0xb2, 0x1d, 0x64, 0x30, 0xbd, 0xc5,
	0xbe, 0x5e, 0xf0, 0xe6, 0x3b, 0x00, 0x00, 0xff, 0xff, 0x23, 0x62, 0x0f, 0x75, 0xd5, 0x01, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// LatencyCheckClient is the client API for LatencyCheck service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LatencyCheckClient interface {
	GetLatency(ctx context.Context, in *BroadcasterLatencyReq, opts ...grpc.CallOption) (*LatencyCheckRes, error)
	UpdateRouter(ctx context.Context, in *ClosestOrchestratorReq, opts ...grpc.CallOption) (*ClosestOrchestratorRes, error)
}

type latencyCheckClient struct {
	cc grpc.ClientConnInterface
}

func NewLatencyCheckClient(cc grpc.ClientConnInterface) LatencyCheckClient {
	return &latencyCheckClient{cc}
}

func (c *latencyCheckClient) GetLatency(ctx context.Context, in *BroadcasterLatencyReq, opts ...grpc.CallOption) (*LatencyCheckRes, error) {
	out := new(LatencyCheckRes)
	err := c.cc.Invoke(ctx, "/net.LatencyCheck/GetLatency", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *latencyCheckClient) UpdateRouter(ctx context.Context, in *ClosestOrchestratorReq, opts ...grpc.CallOption) (*ClosestOrchestratorRes, error) {
	out := new(ClosestOrchestratorRes)
	err := c.cc.Invoke(ctx, "/net.LatencyCheck/UpdateRouter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LatencyCheckServer is the server API for LatencyCheck service.
type LatencyCheckServer interface {
	GetLatency(context.Context, *BroadcasterLatencyReq) (*LatencyCheckRes, error)
	UpdateRouter(context.Context, *ClosestOrchestratorReq) (*ClosestOrchestratorRes, error)
}

// UnimplementedLatencyCheckServer can be embedded to have forward compatible implementations.
type UnimplementedLatencyCheckServer struct {
}

func (*UnimplementedLatencyCheckServer) GetLatency(ctx context.Context, req *BroadcasterLatencyReq) (*LatencyCheckRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLatency not implemented")
}
func (*UnimplementedLatencyCheckServer) UpdateRouter(ctx context.Context, req *ClosestOrchestratorReq) (*ClosestOrchestratorRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateRouter not implemented")
}

func RegisterLatencyCheckServer(s *grpc.Server, srv LatencyCheckServer) {
	s.RegisterService(&_LatencyCheck_serviceDesc, srv)
}

func _LatencyCheck_GetLatency_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BroadcasterLatencyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LatencyCheckServer).GetLatency(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/net.LatencyCheck/GetLatency",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LatencyCheckServer).GetLatency(ctx, req.(*BroadcasterLatencyReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _LatencyCheck_UpdateRouter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClosestOrchestratorReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LatencyCheckServer).UpdateRouter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/net.LatencyCheck/UpdateRouter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LatencyCheckServer).UpdateRouter(ctx, req.(*ClosestOrchestratorReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _LatencyCheck_serviceDesc = grpc.ServiceDesc{
	ServiceName: "net.LatencyCheck",
	HandlerType: (*LatencyCheckServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetLatency",
			Handler:    _LatencyCheck_GetLatency_Handler,
		},
		{
			MethodName: "UpdateRouter",
			Handler:    _LatencyCheck_UpdateRouter_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "net/router.proto",
}
