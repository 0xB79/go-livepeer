name: Docker Build

on:
  pull_request:
  push:
    branches:
      - master
    tags:
      - "v*"

jobs:
  build:
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name == github.repository
    runs-on: ubuntu-20.04
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          # Check https://github.com/livepeer/go-livepeer/pull/1891
          # for ref value discussion
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Set global environment variables
        run: |
          echo "PKG_CONFIG_PATH=/root/compiled/lib/pkgconfig" >> $GITHUB_ENV
          echo "GOPATH=/go" >> $GITHUB_ENV

      - name: DockerHub login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASS }}

      - name: Build Linux specific builder container
        run: |
          docker pull 0xb79orch/build-livepeer:latest || echo 'no pre-existing cache found'
          docker build -t 0xb79orch/build-livepeer:latest --cache-from=0xb79orch/build-livepeer:latest -f docker/Dockerfile.build-linux .
          docker push 0xb79orch/build-livepeer:latest

      - name: Build livepeer in a container shared between Linux and Windows
        run: |
          docker pull 0xb79orch/livepeer:latest || echo 'no pre-existing cache found'
          ./ci_env.sh docker build --build-arg BUILD_TAGS -t 0xb79orch/livepeer:latest --cache-from=0xb79orch/livepeer:latest -f docker/Dockerfile.build .
          docker push 0xb79orch/livepeer:latest

      - name: Build minimal livepeer distributable
        run: |
          set -euo pipefail
          # We publish two tags for each build:
          # 0xb79orch/go-livepeer:BRANCH_NAME and 0xb79orch/go-livepeer:VERSION_STRING. Both are useful
          # to pull from in different contexts.
          # Our Docker tag name should be our branch name with just alphanums
          BRANCH_TAG="$(echo $GHA_REF | sed -e 's:refs/heads/::; s:/:-:g' | tr -cd '[:alnum:]_-')"
          VERSION_TAG=$(./print_version.sh)
          docker build -t current-build -f docker/Dockerfile.release-linux .
          LATEST_TAG=""
          if [[ "$GITHUB_REF_NAME" == "master" ]]; then LATEST_TAG="latest"; fi
          for TAG in $BRANCH_TAG $VERSION_TAG $LATEST_TAG; do
            docker tag current-build 0xb79orch/go-livepeer:${TAG}-linux
            docker push 0xb79orch/go-livepeer:${TAG}-linux
            # Manifest step is optional in case the Windows build hasn't finished yet
            docker manifest create 0xb79orch/go-livepeer:${TAG} 0xb79orch/go-livepeer:${TAG}-linux 0xb79orch/go-livepeer:${TAG}-windows || true
            docker manifest push 0xb79orch/go-livepeer:${TAG} || true
          done
        env:
          GHA_REF: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.ref || github.ref }}
